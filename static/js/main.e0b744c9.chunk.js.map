{"version":3,"sources":["components/Table/styles.tsx","components/Table/Cell.tsx","components/Table/Row.tsx","components/Table/Table.tsx","constant.ts","components/Loading/styles.tsx","components/Loading/index.tsx","utils/convertToIndianUnit.ts","components/Footer/styles.tsx","components/Footer/index.tsx","styles.tsx","App.tsx","Routes.tsx","reportWebVitals.ts","index.tsx"],"names":["StyledTable","styled","div","cols","StyledIconDiv","StyledCell","textColor","StyledRow","props","showCursor","header","Cell","data","firstChild","sort","onClick","color","role","e","text","Row","row","handleSort","useState","setSort","sortIndex","setSortIndex","value","map","cell","index","key","newSort","flipSort","handleClick","Table","heading","rows","allowClick","history","useHistory","code","push","length","toString","STATE_NAMES","AP","AR","AS","BR","CT","GA","GJ","HR","HP","JH","KA","KL","MP","MH","MN","ML","MZ","NL","OR","PB","RJ","SK","TN","TG","TR","UT","UP","WB","AN","CH","DN","DL","JK","LA","LD","PY","TT","animation","keyframes","StyledLoading","Loading","formatNumToString","num","base","suffix","digits","re","RegExp","m","match","parseFloat","valueOf","toFixedDown","convertToIndiaUnit","isNaN","Math","round","toLocaleString","StyledFooter","footer","Section","A","a","Footer","href","target","TableWrapper","Header","H1","h1","P","LegendWrapper","Legend","Circle","circleColor","DateWrapper","headings","getETA","vaccinated1","vaccinated2","population","parseInt","days","perDay","Number","targetDate","moment","add","now","years","diff","months","to","console","log","format","getAverageSpeed","getPercentVaccinated","vaccinated","percentVaccinated","App","rawData","setRawData","resp","setResp","setRows","loading","setLoading","setTarget","useParams","getRow","useCallback","eta100","delta7","meta","eta70","total","useEffect","axios","get","fn","districts","_rows","Object","keys","filter","className","type","onChange","i","oldRows","firstRow","undefined","row1","row2","value1","value2","ret","Routes","path","children","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e0b744c9.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nexport const StyledTable = styled.div<{ cols: string }>`\n  display: grid;\n  grid-template-rows: auto;\n  grid-template-columns: repeat(${({ cols }) => cols}, fit-content(25%));\n  /* gap: 0.2rem; */\n`;\n\nexport const StyledIconDiv = styled.div`\n  position: absolute;\n  right: 0;\n  top: 10%;\n  color: #4a4e60;\n`;\n\nexport const StyledCell = styled.div<{\n  firstChild?: Boolean;\n  textColor?: string;\n}>`\n  padding: 0.5rem;\n  padding-left: 0.4rem;\n  padding-right: 0.7rem;\n  transition: color 0.3s ease-in-out;\n  color: ${({ textColor }) => textColor || \"#5b5c68\"};\n  font-size: 11pt;\n  position: relative;\n\n  &:first-child {\n    position: sticky;\n    left: 0;\n    color: #000000;\n    background-color: #fff;\n    z-index: 3;\n    border-top-left-radius: 10px;\n    border-bottom-left-radius: 10px;\n\n    @media (max-width: 600px) {\n      border-right: 1px solid #97979729;\n    }\n  }\n\n  &:last-child {\n    border-top-right-radius: 10px;\n    border-bottom-right-radius: 10px;\n  }\n`;\n\nexport const StyledRow = styled.div<{ header?: Boolean; showCursor: Boolean }>`\n  display: contents;\n\n  ${StyledCell} {\n    ${(props) => props.showCursor && \"cursor: pointer;\"}\n\n    ${(props) =>\n      props.header &&\n      `\n      background-color: #f9f9fb;\n      color: #787a8a;\n      display: flex;\n      align-items: center;\n      cursor: pointer;\n\n      &:hover {\n        background-color: #f4f4f4;\n      }\n    `}\n  }\n`;\n","import { MouseEventHandler } from \"react\";\nimport { ISort } from \"../../interfaces/Row\";\nimport { StyledCell, StyledIconDiv } from \"./styles\";\n\ntype Props = {\n  data: { text: string; color?: string };\n  firstChild?: Boolean;\n  sort?: ISort;\n  onClick?: (text: string) => void;\n};\n\nconst Cell = ({ data, firstChild, sort, onClick }: Props) => {\n  const handleClick: MouseEventHandler = (e) => {\n    onClick?.(data.text);\n  };\n\n  return (\n    <StyledCell\n      firstChild={firstChild}\n      textColor={data.color}\n      role=\"button\"\n      onClick={handleClick}\n    >\n      <span>{data.text}</span>\n      <StyledIconDiv>{sort && (sort === \"asc\" ? \" ↑\" : \" ↓\")}</StyledIconDiv>\n    </StyledCell>\n  );\n};\n\nexport default Cell;\n","import { useState } from \"react\";\nimport { IRow, ISort } from \"../../interfaces/Row\";\nimport Cell from \"./Cell\";\nimport { StyledRow } from \"./styles\";\n\nconst Row = ({\n  row,\n  header,\n  handleSort,\n  onClick,\n}: {\n  row: IRow;\n  header?: Boolean;\n  handleSort?: (heading: string, sort: ISort) => void;\n  onClick?: (code: string) => void;\n}) => {\n  const [sort, setSort] = useState<ISort>();\n  const [sortIndex, setSortIndex] = useState<Number | undefined>();\n\n  const flipSort = (sort: ISort) => (sort === \"asc\" ? \"desc\" : \"asc\");\n\n  const handleClick = (text: string, index: number) => {\n    if (handleSort) {\n      const newSort = index === sortIndex ? flipSort(sort) : \"asc\";\n      handleSort(text, newSort);\n      setSort(newSort);\n      setSortIndex(index);\n    }\n  };\n\n  return (\n    <StyledRow\n      header={header}\n      onClick={() => {\n        onClick?.(row[0].value);\n      }}\n      showCursor={!!onClick}\n    >\n      {row.map((cell, index) => {\n        const props = {\n          data: cell,\n          key: index,\n          onClick: (text: string) => handleClick(text, index),\n          ...(index === 0 && { firstChild: true }),\n          ...(sortIndex === index && { sort }),\n        };\n\n        return <Cell {...props} />;\n      })}\n    </StyledRow>\n  );\n};\n\nexport default Row;\n","import Row from \"./Row\";\nimport { IRow, ISort } from \"../../interfaces/Row\";\nimport { StyledTable } from \"./styles\";\nimport { useHistory } from \"react-router-dom\";\n\nconst Table = ({\n  heading,\n  rows,\n  handleSort,\n  allowClick,\n}: {\n  heading: IRow;\n  rows: IRow[];\n  handleSort: (heading: string, sort: ISort) => void;\n  allowClick: Boolean;\n}) => {\n  let history = useHistory();\n\n  const handleClick = (code: string) => {\n    history.push(`/${code}`);\n  };\n\n  return (\n    <StyledTable cols={heading.length.toString()}>\n      <Row row={heading} header handleSort={handleSort} />\n      {rows.map((row, index) =>\n        index === 0 ? (\n          <Row row={row} key={row[0].value} />\n        ) : (\n          <Row\n            row={row}\n            key={row[0].value}\n            {...(allowClick && {\n              onClick: handleClick,\n            })}\n          />\n        )\n      )}\n    </StyledTable>\n  );\n};\n\nexport default Table;\n","export const STATE_NAMES: { [key: string]: string } = {\n  AP: \"Andhra Pradesh\",\n  AR: \"Arunachal Pradesh\",\n  AS: \"Assam\",\n  BR: \"Bihar\",\n  CT: \"Chhattisgarh\",\n  GA: \"Goa\",\n  GJ: \"Gujarat\",\n  HR: \"Haryana\",\n  HP: \"Himachal Pradesh\",\n  JH: \"Jharkhand\",\n  KA: \"Karnataka\",\n  KL: \"Kerala\",\n  MP: \"Madhya Pradesh\",\n  MH: \"Maharashtra\",\n  MN: \"Manipur\",\n  ML: \"Meghalaya\",\n  MZ: \"Mizoram\",\n  NL: \"Nagaland\",\n  OR: \"Odisha\",\n  PB: \"Punjab\",\n  RJ: \"Rajasthan\",\n  SK: \"Sikkim\",\n  TN: \"Tamil Nadu\",\n  TG: \"Telangana\",\n  TR: \"Tripura\",\n  UT: \"Uttarakhand\",\n  UP: \"Uttar Pradesh\",\n  WB: \"West Bengal\",\n  AN: \"Andaman and Nicobar Islands\",\n  CH: \"Chandigarh\",\n  DN: \"Dadra and Nagar Haveli and Daman and Diu\",\n  DL: \"Delhi\",\n  JK: \"Jammu and Kashmir\",\n  LA: \"Ladakh\",\n  LD: \"Lakshadweep\",\n  PY: \"Puducherry\",\n  TT: \"India\",\n};\n","import styled, { keyframes } from \"styled-components\";\n\nconst animation = keyframes`\n  0%,\n  100% {\n    box-shadow: 0em -2.6em 0em 0em #9c9c9c, 1.8em -1.8em 0 0em rgba(156,156,156, 0.2), 2.5em 0em 0 0em rgba(156,156,156, 0.2), 1.75em 1.75em 0 0em rgba(156,156,156, 0.2), 0em 2.5em 0 0em rgba(156,156,156, 0.2), -1.8em 1.8em 0 0em rgba(156,156,156, 0.2), -2.6em 0em 0 0em rgba(156,156,156, 0.5), -1.8em -1.8em 0 0em rgba(156,156,156, 0.7);\n  }\n  12.5% {\n    box-shadow: 0em -2.6em 0em 0em rgba(156,156,156, 0.7), 1.8em -1.8em 0 0em #9c9c9c, 2.5em 0em 0 0em rgba(156,156,156, 0.2), 1.75em 1.75em 0 0em rgba(156,156,156, 0.2), 0em 2.5em 0 0em rgba(156,156,156, 0.2), -1.8em 1.8em 0 0em rgba(156,156,156, 0.2), -2.6em 0em 0 0em rgba(156,156,156, 0.2), -1.8em -1.8em 0 0em rgba(156,156,156, 0.5);\n  }\n  25% {\n    box-shadow: 0em -2.6em 0em 0em rgba(156,156,156, 0.5), 1.8em -1.8em 0 0em rgba(156,156,156, 0.7), 2.5em 0em 0 0em #9c9c9c, 1.75em 1.75em 0 0em rgba(156,156,156, 0.2), 0em 2.5em 0 0em rgba(156,156,156, 0.2), -1.8em 1.8em 0 0em rgba(156,156,156, 0.2), -2.6em 0em 0 0em rgba(156,156,156, 0.2), -1.8em -1.8em 0 0em rgba(156,156,156, 0.2);\n  }\n  37.5% {\n    box-shadow: 0em -2.6em 0em 0em rgba(156,156,156, 0.2), 1.8em -1.8em 0 0em rgba(156,156,156, 0.5), 2.5em 0em 0 0em rgba(156,156,156, 0.7), 1.75em 1.75em 0 0em #9c9c9c, 0em 2.5em 0 0em rgba(156,156,156, 0.2), -1.8em 1.8em 0 0em rgba(156,156,156, 0.2), -2.6em 0em 0 0em rgba(156,156,156, 0.2), -1.8em -1.8em 0 0em rgba(156,156,156, 0.2);\n  }\n  50% {\n    box-shadow: 0em -2.6em 0em 0em rgba(156,156,156, 0.2), 1.8em -1.8em 0 0em rgba(156,156,156, 0.2), 2.5em 0em 0 0em rgba(156,156,156, 0.5), 1.75em 1.75em 0 0em rgba(156,156,156, 0.7), 0em 2.5em 0 0em #9c9c9c, -1.8em 1.8em 0 0em rgba(156,156,156, 0.2), -2.6em 0em 0 0em rgba(156,156,156, 0.2), -1.8em -1.8em 0 0em rgba(156,156,156, 0.2);\n  }\n  62.5% {\n    box-shadow: 0em -2.6em 0em 0em rgba(156,156,156, 0.2), 1.8em -1.8em 0 0em rgba(156,156,156, 0.2), 2.5em 0em 0 0em rgba(156,156,156, 0.2), 1.75em 1.75em 0 0em rgba(156,156,156, 0.5), 0em 2.5em 0 0em rgba(156,156,156, 0.7), -1.8em 1.8em 0 0em #9c9c9c, -2.6em 0em 0 0em rgba(156,156,156, 0.2), -1.8em -1.8em 0 0em rgba(156,156,156, 0.2);\n  }\n  75% {\n    box-shadow: 0em -2.6em 0em 0em rgba(156,156,156, 0.2), 1.8em -1.8em 0 0em rgba(156,156,156, 0.2), 2.5em 0em 0 0em rgba(156,156,156, 0.2), 1.75em 1.75em 0 0em rgba(156,156,156, 0.2), 0em 2.5em 0 0em rgba(156,156,156, 0.5), -1.8em 1.8em 0 0em rgba(156,156,156, 0.7), -2.6em 0em 0 0em #9c9c9c, -1.8em -1.8em 0 0em rgba(156,156,156, 0.2);\n  }\n  87.5% {\n    box-shadow: 0em -2.6em 0em 0em rgba(156,156,156, 0.2), 1.8em -1.8em 0 0em rgba(156,156,156, 0.2), 2.5em 0em 0 0em rgba(156,156,156, 0.2), 1.75em 1.75em 0 0em rgba(156,156,156, 0.2), 0em 2.5em 0 0em rgba(156,156,156, 0.2), -1.8em 1.8em 0 0em rgba(156,156,156, 0.5), -2.6em 0em 0 0em rgba(156,156,156, 0.7), -1.8em -1.8em 0 0em #9c9c9c;\n  }\n`;\n\nexport const StyledLoading = styled.div`\n  margin: 100px auto;\n  font-size: 25px;\n  width: 1em;\n  height: 1em;\n  border-radius: 50%;\n  position: relative;\n  text-indent: -9999em;\n  animation: ${animation} 1.1s infinite ease;\n  transform: translateZ(0);\n`;\n","import { StyledLoading } from \"./styles\";\n\nexport const Loading = () => {\n  return <StyledLoading />;\n};\n","const toFixedDown = (num: number, digits: number) => {\n  let re = new RegExp(\"(\\\\d+\\\\.\\\\d{\" + digits + \"})(\\\\d)\"),\n    m = num.toString().match(re);\n  return m ? parseFloat(m[1]) : num.valueOf();\n};\n\nconst formatNumToString = (num: number, base: number, suffix: string) => {\n  return `${toFixedDown(num / base, 2)} ${suffix}`;\n};\n\nexport const convertToIndiaUnit = (num: number) => {\n  if (isNaN(num)) return undefined;\n  if (num >= 1000000000) return \"Infinity\";\n  if (num / 10000000 > 1) return formatNumToString(num, 10000000, \"Cr\");\n  if (num / 100000 > 1) return formatNumToString(num, 100000, \"Lakh\");\n\n  return Math.round(num).toLocaleString(\"en-IN\");\n};\n","import styled from \"styled-components\";\n\nexport const StyledFooter = styled.footer`\n  padding: 2rem 0.5rem;\n  color: #8b9095;\n  font-size: 10pt;\n  text-align: center;\n`;\n\nexport const Section = styled.div`\n  padding-bottom: 0.2rem;\n`;\n\nexport const A = styled.a`\n  color: inherit;\n`;\n","import { StyledFooter, A, Section } from \"./styles\";\n\nexport const Footer = () => {\n  return (\n    <StyledFooter>\n      <Section>\n        <span>The data is provided by </span>\n        <A href=\"https://api.covid19india.org/\" target=\"_blank\">\n          https://api.covid19india.org/\n        </A>\n      </Section>\n      <Section>\n        <span>Check the source code at </span>\n        <A href=\"https://github.com/il3ven/ETA-for-vaccination\" target=\"_blank\">\n          GitHub\n        </A>\n        <span> or </span>\n        <A href=\"mailto:8e023sxup@relay.firefox.com\" target=\"_blank\">\n          Email us\n        </A>\n      </Section>\n    </StyledFooter>\n  );\n};\n","import styled from \"styled-components\";\n\nexport const TableWrapper = styled.div`\n  margin: 0 auto;\n  overflow: auto;\n\n  @media (min-width: 800px) {\n    max-width: 700px;\n  }\n`;\n\nexport const Header = styled.header`\n  margin: 0 auto;\n  max-width: 900px;\n  padding: 0 1rem;\n`;\n\nexport const H1 = styled.h1`\n  font-size: 18pt;\n  color: #483b3b;\n  padding-bottom: 2rem;\n  font-weight: 500;\n\n  @media (min-width: 800px) {\n    font-size: 24pt;\n  }\n`;\n\nexport const P = styled.div`\n  max-width: 700px;\n`;\n\nexport const LegendWrapper = styled.div`\n  display: flex;\n  flex-flow: row wrap;\n  padding-bottom: 1rem;\n`;\n\nexport const Legend = styled.div`\n  display: flex;\n  align-items: center;\n  padding-right: 1rem;\n  padding-bottom: 1rem;\n\n  .text {\n    font-size: 9pt;\n    max-width: 12rem;\n    color: #808080;\n  }\n`;\n\nexport const Circle = styled.div<{ circleColor: string }>`\n  display: inline-block;\n  background: ${({ circleColor }) => circleColor};\n  width: 20px;\n  height: 20px;\n  border-radius: 50%;\n  margin-right: 10px;\n`;\n\nexport const DateWrapper = styled.div`\n  padding-bottom: 1rem;\n`;\n","import { IRow, ISort } from \"./interfaces/Row\";\nimport Table from \"./components/Table/Table\";\nimport axios from \"axios\";\nimport { ChangeEvent, useEffect, useCallback } from \"react\";\nimport { useState } from \"react\";\nimport { STATE_NAMES } from \"./constant\";\nimport { Loading } from \"./components/Loading\";\nimport { convertToIndiaUnit } from \"./utils/convertToIndianUnit\";\nimport moment from \"moment\";\nimport { useParams } from \"react-router-dom\";\nimport { Footer } from \"./components/Footer\";\nimport {\n  TableWrapper,\n  H1,\n  P,\n  Legend,\n  Circle,\n  Header,\n  LegendWrapper,\n  DateWrapper,\n} from \"./styles\";\n\nconst headings = [\n  { text: \"State\", value: \"1\" },\n  { text: \"ETA for everyone to get vaccinated\", value: \"2\" },\n  { text: \"ETA for 70% people to get vaccinated\", value: \"3\" },\n  { text: \"Vaccines administered per day\", value: \"4\" },\n  { text: \"Percentage of Population Vaccinated with Dose 1\", value: \"5\" },\n  { text: \"Percentage of Population Vaccinated with Dose 2\", value: \"6\" },\n];\n// const rows: IRow[] = [[\"Delhi\", \"50%\"]];\n\nconst getETA = (\n  vaccinated1: string,\n  vaccinated2: string,\n  population: string\n) => {\n  if (!parseInt(vaccinated1) || !parseInt(vaccinated2) || !parseInt(population))\n    return {\n      text: \"-\",\n      days: 0,\n    };\n\n  const perDay = Math.round((Number(vaccinated1) + Number(vaccinated2)) / 7);\n  const targetDate = moment().add(\n    (parseInt(population) * 2) / perDay, // days remaining\n    \"days\"\n  );\n\n  const now = moment();\n\n  const years = targetDate.diff(now, \"years\");\n  now.add(years, \"years\");\n  const months = targetDate.diff(now, \"months\");\n  now.add(months, \"months\");\n  const days = targetDate.diff(now, \"days\");\n\n  let text = moment().to(targetDate);\n\n  if (years > 0 && months > 0)\n    text = `${years} ${years > 1 ? \"years\" : \"year\"} and ${\n      months > 1 ? `${months} months` : `a month`\n    }`;\n  else if (months > 0 && days > 0)\n    text = `${months} ${months > 1 ? \"months\" : \"month\"} and ${\n      days > 1 ? `${days} days` : `a day`\n    }`;\n  else if (years > 0) text = `${years} ${years > 1 ? \"years\" : \"year\"}`;\n  else if (months > 0) text = `${months} ${months > 1 ? \"months\" : \"month\"}`;\n  else if (days > 0) text = `${days} ${days > 1 ? \"days\" : \"day\"}`;\n\n  if (text === \"a few seconds ago\")\n    console.log(text, targetDate.format(\"DD-MM-YYYY\"), population);\n\n  return { text, days: Math.round((parseInt(population) * 2) / perDay) };\n};\n\nconst getAverageSpeed = (vaccinated1: string, vaccinated2: string) => {\n  return {\n    text:\n      convertToIndiaUnit(\n        Math.round((Number(vaccinated1) + Number(vaccinated2)) / 7)\n      ) || \"-\",\n    value: (\n      Math.round((Number(vaccinated1) + Number(vaccinated2)) / 7) || 0\n    ).toString(),\n  };\n};\n\nconst getPercentVaccinated = (vaccinated: string, population: string) => {\n  const percentVaccinated = convertToIndiaUnit(\n    Math.round((Number(vaccinated) / Number(population)) * 100)\n  );\n  return {\n    text: `${percentVaccinated ? percentVaccinated + \"%\" : \"-\"}`,\n    value: (\n      Math.round((Number(vaccinated) / Number(population)) * 100) || \"0\"\n    ).toString(),\n  };\n};\n\nfunction App() {\n  const [rawData, setRawData] = useState<any>();\n  const [resp, setResp] = useState();\n  const [rows, setRows] = useState<IRow[]>([[]]);\n  const [loading, setLoading] = useState<Boolean>(true);\n  const [target, setTarget] = useState<string>(\"2022-06-01\"); // Date string in YYYY-MM-DD\n  let { code } = useParams<{ code: string }>();\n\n  const getRow = useCallback(\n    (resp: any = {}, code: string): IRow => {\n      const eta100 = getETA(\n        resp[code]?.delta7?.vaccinated1,\n        resp[code]?.delta7?.vaccinated2,\n        resp[code]?.meta?.population\n      );\n\n      const eta70 = getETA(\n        resp[code]?.delta7?.vaccinated1,\n        resp[code]?.delta7?.vaccinated2,\n        (0.7 * parseInt(resp[code]?.meta?.population)).toString()\n      );\n\n      return [\n        { text: STATE_NAMES[code] || code, value: code },\n        {\n          text: eta100.text,\n          value: eta100.days.toString(),\n          color: `${\n            eta100.days - moment(target).diff(moment(), \"days\") > 0\n              ? \"#ea3b3b\"\n              : \"#1b8e1d\"\n          }`,\n        },\n        {\n          text: eta70.text,\n          value: eta70.days.toString(),\n          color: `${\n            eta70.days - moment(target).diff(moment(), \"days\") > 0\n              ? \"#ea3b3b\"\n              : \"#1b8e1d\"\n          }`,\n        },\n        {\n          ...getAverageSpeed(\n            resp[code]?.delta7?.vaccinated1,\n            resp[code]?.delta7?.vaccinated2\n          ),\n        },\n        {\n          ...getPercentVaccinated(\n            resp[code]?.total?.vaccinated1,\n            resp[code]?.meta?.population\n          ),\n        },\n        {\n          ...getPercentVaccinated(\n            resp[code]?.total?.vaccinated2,\n            resp[code]?.meta?.population\n          ),\n        },\n      ];\n    },\n    [target]\n  );\n\n  useEffect(() => {\n    const fn = async () => {\n      setLoading(true);\n\n      const resp = (\n        await axios.get(\n          \"https://raw.githubusercontent.com/covid19india/api/gh-pages/v4/min/data.min.json\"\n        )\n      ).data;\n\n      setRawData(resp);\n      setLoading(false);\n    };\n\n    fn();\n  }, []);\n\n  useEffect(() => {\n    setResp(code ? rawData?.[code]?.districts : rawData);\n  }, [code, rawData]);\n\n  useEffect(() => {\n    setLoading(true);\n    const _rows = code\n      ? Object.keys(resp || {})\n          .filter((code) => code !== \"TT\")\n          .map((code: string): IRow => {\n            return getRow(resp, code);\n          })\n      : [\n          getRow(resp, \"TT\"),\n          ...Object.keys(resp || {})\n            .filter((code) => code !== \"TT\")\n            .map((code: string): IRow => {\n              return getRow(resp, code);\n            }),\n        ];\n\n    setRows(_rows);\n    setLoading(false);\n  }, [resp, getRow, code]);\n\n  const handleDate = (e: ChangeEvent<HTMLInputElement>) => {\n    setTarget(e.target.value);\n  };\n\n  const handleSort = (heading: string, sort: ISort) => {\n    console.log(heading);\n    let index = -1;\n\n    for (let i = 0; i < headings.length; i++) {\n      if (headings[i].text === heading) {\n        index = i;\n        break;\n      }\n    }\n\n    let firstRow: IRow | undefined = undefined,\n      oldRows: IRow[];\n\n    if (code) {\n      [...oldRows] = rows;\n    } else {\n      [firstRow, ...oldRows] = rows;\n    }\n\n    oldRows.sort((row1, row2) => {\n      const value1 = row1[index].value;\n      const value2 = row2[index].value;\n\n      if (parseInt(value1) && parseInt(value2)) {\n        const ret =\n          sort === \"asc\"\n            ? parseInt(value1) - parseInt(value2)\n            : parseInt(value2) - parseInt(value1);\n        return ret;\n      }\n\n      let ret = 0;\n      if (value1 > value2) ret = 1;\n      else if (value1 < value2) ret = -1;\n      return sort === \"asc\" ? ret : ret * -1;\n    });\n\n    firstRow ? setRows([firstRow, ...oldRows]) : setRows(oldRows);\n  };\n\n  return (\n    <div className=\"App\">\n      <Header>\n        <H1>Will we be able to acheive our vaccination targets?</H1>\n        <P>\n          <DateWrapper>\n            <span>Select the target date: </span>\n            <input type=\"date\" value={target} onChange={handleDate} />\n          </DateWrapper>\n          <LegendWrapper>\n            <Legend>\n              <Circle circleColor=\"#ea3b3b\" />\n              <span className=\"text\">\n                Not possible to fully vaccinate people before the selected\n                target\n              </span>\n            </Legend>\n            <Legend>\n              <Circle circleColor=\"#1b8e1d\" />\n              <span className=\"text\">Will be able to meet target</span>\n            </Legend>\n          </LegendWrapper>\n        </P>\n      </Header>\n\n      {loading ? (\n        <Loading />\n      ) : (\n        <TableWrapper>\n          <Table\n            heading={headings}\n            rows={rows}\n            handleSort={handleSort}\n            allowClick={!code}\n          />\n        </TableWrapper>\n      )}\n\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","import App from \"./App\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\nexport const Routes = () => {\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/:code\" children={<App />} />\n        <Route path=\"/\" children={<App />} />\n      </Switch>\n    </Router>\n  );\n};\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { Routes } from \"./Routes\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Routes />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}